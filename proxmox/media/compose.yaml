version: "3.8"

services:
  # üé¨ Jellyfin - Media Server
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    network_mode: host # Use host networking for DLNA and better performance
    volumes:
      - ./jellyfin/config:/config # Jellyfin config directory
      - ./jellyfin/cache:/cache # Transcoding and image cache
      - ./media:/media # Media library (movies, shows, etc.)
    environment:
      - TZ=Asia/Kolkata
      - JELLYFIN_PublishedServerUrl=https://jellyfin.ghost.meanii.dev
    restart: unless-stopped

  # üß≤ qBittorrent - Torrent Client
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    ports:
      - "8080:8080" # Web UI
      - "6881:6881" # BitTorrent port
      - "6881:6881/udp" # BitTorrent UDP port
    environment:
      - PUID=1000 # User ID
      - PGID=1000 # Group ID
      - TZ=Asia/Kolkata
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent/config:/config # qBittorrent config
      - ./downloads:/downloads # Downloaded files
    restart: unless-stopped

  # ü§ñ qBittorrentBot - Telegram Bot Controller
  qbittorrent-bot:
    image: ch3p4ll3/qbittorrent-bot:latest
    container_name: qbittorrent-bot
    depends_on:
      - qbittorrent # Wait for qbittorrent to be ready
    volumes:
      - ./qbitbot:/app/config:rw # Bot config

  # üéûÔ∏è Radarr - Movie Management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    ports:
      - "7878:7878" # Web UI
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ./radarr/config:/config # Radarr config
      - ./downloads:/downloads # For importing downloaded movies
      - ./media/movies:/movies # Final movie library
    restart: unless-stopped

  # üì∫ Sonarr - TV Series Management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    ports:
      - "8989:8989" # Web UI
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ./sonarr/config:/config # Sonarr config
      - ./downloads:/downloads # For importing downloaded episodes
      - ./media/shows:/tv # Final TV shows library
    restart: unless-stopped

  # üß≠ Prowlarr - Indexer Manager
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    ports:
      - "9696:9696" # Web UI
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ./prowlarr/config:/config # Prowlarr config
    restart: unless-stopped

  # üéüÔ∏è Jellyseerr - Media Request Service
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    ports:
      - "5055:5055" # Web UI
    environment:
      - LOG_LEVEL=debug
      - TZ=Asia/Kolkata
    volumes:
      - ./jellyseerr/config:/app/config # Jellyseerr config
    restart: unless-stopped

  # üàÇÔ∏è Bazarr - Subtitle Management
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    ports:
      - "6767:6767" # Web UI
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ./bazarr/config:/config # Bazarr config
      - ./media/movies:/movies # Movies for subtitle matching
      - ./media/shows:/tv # Shows for subtitle matching
    restart: unless-stopped

  # üîÑ FileFlows Server - Transcoding/Automation
  fileflows-server:
    image: revenz/fileflows
    restart: unless-stopped
    ports:
      - "19200:5000" # FileFlows UI
    environment:
      - TempPathHost=./fileflow/tmp
      - TZ=Asia/Kolkata
      - PUID=1000
      - PGID=1000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./fileflow/tmp:/temp
      - ./fileflow/data:/app/Data
      - ./fileflow/log:/app/Logs
      - ./fileflow/comon:/app/common
      - ./media/movies:/media/movies
      - ./media/shows:/media/shows

  # ‚öôÔ∏è FileFlows Node - Worker Node for FileFlows
  fileflows-node:
    image: revenz/fileflows
    restart: unless-stopped
    hostname: fileflows-docker-node
    environment:
      - ServerUrl=http://fileflows-server:19200
      - TempPathHost=./fileflow/tmp
      - TZ=Asia/Kolkata
      - PUID=1000
      - PGID=1000
      - FFNODE=1 # Marks this container as a node
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./fileflow/tmp:/temp
      - ./fileflow/data:/app/Data
      - ./fileflow/log:/app/Logs
      - ./fileflow/comon:/app/common
      - ./media/movies:/media/movies
      - ./media/shows:/media/shows
